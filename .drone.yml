pipeline:

  build_8:
    image: quay.io/ukhomeofficedigital/nodejs-base:v6.9.1
    environment:
      - REDIS_HOST=redis
    commands:
      - npm --loglevel warn install
      - sleep 5
      - npm run test
    when:
      event: [push, pull_request]

  # unit_tests:
  #   image: docker:18.03.1-ce
  #   environment:
  #     - DOCKER_HOST=tcp://172.17.0.1:2375
  #   commands:
  #     - docker run -d --name=redis-$${DRONE_COMMIT_SHA} redis
  #     - docker build -f Dockerfile-unit -t unit-tests-$${DRONE_COMMIT_SHA} .
  #     - docker ps -a
  #     - docker run -d -e NODE_ENV=test -e  --net=container:redis-$${DRONE_COMMIT_SHA} unit-tests-$${DRONE_COMMIT_SHA}
  #     - sleep 5
  #     - npm run test
  #     - docker rm "redis-$${DRONE_COMMIT_SHA}" "unit-tests-$${DRONE_COMMIT_SHA}"
  #   when:
  #     event: [push, pull_request]

# services:
#   database:
#     image: redis
#     environment:
#       - DOCKER_HOST=tcp://172.17.0.1:2375

#   cache:
#     image: quay.io/ukhomeofficedigital/redis:v0.1.2

  # build_app_pr:
  #   image: quay.io/ukhomeofficedigital/drone-docker
  #   commands:
  #     - docker build -t app-$${DRONE_COMMIT_SHA} .
  #   when:
  #     event: pull_request

  build_app:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker build -t app-$${DRONE_COMMIT_SHA} .
    when:
      branch: master
      event: push

  image_to_quay:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
      - docker_password
    environment:
      - DOCKER_USERNAME=ukhomeofficedigital+modern_slavery_bot
    registry: quay.io
    branch: master
    repo: quay.io/ukhomeofficedigital/modern-slavery
    tags:
      - ${DRONE_COMMIT_SHA}
      - latest
    when:
      branch: master
      event: push

  tag_to_quay:
    environment:
      - DOCKER_USERNAME=ukhomeofficedigital+modern_slavery_bot
    image: quay.io/ukhomeofficedigital/drone-docker
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/modern-slavery
    secrets: 
      - docker_password
    tags:
      - ${DRONE_TAG}
    when:
      event: tag

services:

  redis:
    image: redis:3.0
