'use strict';

/**
 * Check if at least one option has been selected
 *
 * @param {*} values - list of form values
 *
 * @returns {bool} - If an option has been selected
 */
const isAtLeastOneOptionSelected = (values) => {
  const exploitationOptionValid = Object.keys(values).some((key) => {
    if (key.indexOf('types-of-exploitation') > -1) {
      return values[key].length > 0;
    }

    return false;
  });

  return exploitationOptionValid;
};

module.exports = superclass => class extends superclass {
  validate(req, res, next) {
    const { values } = req.form;

    if (isAtLeastOneOptionSelected(values)) {
      next({
        'types-of-exploitation-forced-to-work': new this.ValidationError('types-of-exploitation-forced-to-work', {
          key: 'types-of-exploitation-forced-to-work',
          type: 'undefined'
        })
      });
    } else {
      super.validate(req, res, next);
    }
  }
};
