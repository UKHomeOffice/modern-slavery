'use strict';

/**
 * Check if at least one option has been selected
 *
 * @param {*} values - list of form values
 *
 * @returns {bool} - If an option has been selected
 */
const isAtLeastOneOptionSelected = values => {
  const exploitationSelectionValid = Object.keys(values).some(key => {
    if (key.indexOf('types-of-exploitation') > -1) {
      const option = values[`${key}`];
      return option;
    }
    return false;
  });

  return exploitationSelectionValid;
};

module.exports = superclass => class extends superclass {
  validate(req, res, next) {
    const { values } = req.form;

    if (!isAtLeastOneOptionSelected(values)) {
      return next({
        'types-of-exploitation-forced-to-work': new this.ValidationError('types-of-exploitation-forced-to-work', {
          key: 'types-of-exploitation-forced-to-work',
          type: 'at-least-one-option-selected'
        })
      });
    }

    req.sessionModel.set('types-of-exploitation', true);
    return super.validate(req, res, next);
  }
};
