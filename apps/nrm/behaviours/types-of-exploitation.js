'use strict';

module.exports = superclass => class extends superclass {

  /**
   * Check if at least one option has been selected
   *
   * @param {*} req - request object
   *
   * @returns {bool} - If an option has been selected
   */
  isAtLeastOneOptionSelected(req) {
    const addressFieldValid = Object.keys(req.form.values).some((key) => {
      if (key.indexOf('types-of-exploitation') > -1) {
        return req.form.values[key].length > 0;
      }

      return false;
    });

    return addressFieldValid;
  }

  validate(req, res, next) {
    if (!this.isAtLeastOneOptionSelected(req)) {
      next({
        'types-of-exploitation-forced-to-work': new this.ValidationError('types-of-exploitation-forced-to-work', {
          key: 'types-of-exploitation-forced-to-work',
          type: 'undefined'
        })
      });
    } else {
      super.validate(req, res, next);
    }
  }
};
