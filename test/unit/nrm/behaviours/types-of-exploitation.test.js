'use strict';

const reqres = require('reqres');
const Behaviour = require('../../../../apps/nrm/behaviours/types-of-exploitation');

describe('/apps/nrm/behaviours/types-of-exploitation', () => {
  it('exports a function', () => {
    expect(Behaviour).to.be.a('function');
  });

  class Base {
    validate() {}
  }

  let req;
  let res;
  let instance;
  let next;
  let TypesOfExploitation;

  describe('validate()', () => {
    beforeEach(() => {
      req = reqres.req();
      res = reqres.res();
      next = sinon.stub();
      TypesOfExploitation = Behaviour(Base);
      instance = new TypesOfExploitation();
      sinon.stub(Base.prototype, 'validate');
    });
    afterEach(() => {
      Base.prototype.validate.restore();
    });

    it('calls the callback in super', async() => {
      req.form = {
        values: {
        'types-of-exploitation-forced-to-work': true
        }
      };

      await instance.validate(req, res, next);
      expect(Base.prototype.validate).to.have.been.called;
    });
  });
});
